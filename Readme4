var NSElementResizer = (function()
{
	var NSElementResizer = function(nsEditor)
	{
		this.__nsEditor = nsEditor;
		this.util = nsEditor.util;
		this.editorUtil = nsEditor.editorUtil;
		
		this.__container = null;
		this.__compTopLeft = null;
		this.__compTopRight = null;
		this.__compBottomLeft = null;
		this.__compBottomRight = null;
		this.__compSize = null;
		this.__doc = null;
		
		this.__isElementResized = false;
        this.__isShown = false;
        this.__element = null;
		
		
		this.setSettings = function()
		{
		};
		
		this.initialize = function()
		{
		};
		
		this.componentsInitialized = function()
		{
			this.__doc = this.__nsEditor.__getDocument();
			this.__createComponents();
			this.__nsEditor.__listenInternalEvent("mouseup keydown touchend",this.__clickOutsideHandler.bind(this));
			this.__nsEditor.__listenInternalEvent("change",this.__changeHandler.bind(this));
		};
		
		this.resized = function(event)
		{
			
		};
		
		this.destroy = function()
		{
		};
		
		this.__createComponents = function()
		{
			if(!this.__container)
			{
				this.__container = this.util.createElement("div",null,"nsEditorResizer",this.__doc);
				this.__compTopLeft = this.util.createElement("div",null,"nsEditorResizerComp nsEditorResizerTopLeft",this.__doc);
				this.__container.appendChild(this.__compTopLeft);
				this.__compTopRight = this.util.createElement("div",null,"nsEditorResizerComp nsEditorResizerTopRight",this.__doc);
				this.__container.appendChild(this.__compTopRight);
				this.__compBottomLeft = this.util.createElement("div",null,"nsEditorResizerComp nsEditorResizerBottomLeft",this.__doc);
				this.__container.appendChild(this.__compBottomLeft);
				this.__compBottomRight = this.util.createElement("div",null,"nsEditorResizerComp nsEditorResizerBottomRight",this.__doc);
				this.__container.appendChild(this.__compBottomRight);
				this.__compSize = this.util.createElement("span",null,"nsEditorResizerSize",this.__doc);
				this.__container.appendChild(this.__compSize);
			}
		};
		
		this.__clickOutsideHandler = function(event,eventDetail)
		{
			if (this.__isShown) 
			{
                if (this.__isElementResized) 
                {
                	var event = this.util.getEvent(event);
                    //_this.jodit.unlock();
                    this.__isElementResized = false;
                    //this.jodit.setEditorValue();
                    event.stopImmediatePropagation();
                    //_this.jodit.events.off(_this.jodit.ownerWindow, 'mousemove.resizer touchmove.resizer', _this.onResize);
                }
                else 
                {
                    this.__hide();
                }
            }
		};
		
		this.__changeHandler = function(event,eventDetail)
		{
			 if(this.__isShown) 
			 {
				 if (!this.__element || !this.__element.parentNode) 
				 {
					 this.__hide();
		         }
		         else 
		         {
		        	 this.__updateCompSize();
		         }
		     }
		};
		
		this.__updateCompSize = function()
		{
			if(this.__isShown)
			{
				if(this.__element && this.__container) 
				{
					
				}
			}
		};
		
		this.__hide = function()
		{
			this.__isElementResized = false;
	        this.__isShown = false;
	        this.__element = null;
	        if(this.__container.parentNode)
	        {
	        	this.__container.parentNode.removeChild(this.__container);
	        }
		};
		
		this.__hideSizeComp = function()
		{
			this.__compSize.display = null;
		};
		
		
		
		
		
		
		
		
		
	};
	
	NSEditor.prototype.registerPlugin("elementResizer",NSElementResizer);
	
	return NSElementResizer;
})();
nsModuleExport(this,"NSElementResizer",NSElementResizer,module,exports);
