package com.nomura.view;



import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.servlet.view.AbstractView;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

public class GsonJsonView extends AbstractView {


	public GsonJsonView() {
		setContentType("application/json");
	}

	@Override
	protected boolean generatesDownloadContent() {
		return false;
	}

	@Override
	protected final void renderMergedOutputModel(
			Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception {
		response.setContentType("text/json;charset=UTF-8");
		response.setHeader("PRAGMA", "NO-CACHE");
		response.setHeader("Cache-Control", "must-revalidate");
		response.setHeader("Cache-Control", "no-cache");
		response.setHeader("Cache-Control", "no-store");
		response.setDateHeader("EXPIRES", 0);
		Gson gson = new GsonBuilder().serializeNulls().create();
		Map<String,Object> data= new HashMap<String, Object>() ;    
		for(String key:model.keySet())
		{	

			if(key.indexOf("org.springframework.validation")==-1)
			{
				data.put(key, model.get(key));
			}

		}
		if(data.keySet().size()==1)
		{
			for(String key:data.keySet())
			{
				String jsonString = gson.toJson(data.get(key)) ; 				  
				response.getWriter().write(jsonString);
			}
		}
		else
		{
			String jsonString = gson.toJson(data) ; 				  
			response.getWriter().write(jsonString);
		}


		; 


	}






}

