.nsToastContainer 
{
	display: block;
	position: fixed;
	width: 250px;
	pointer-events: none !important;
	margin: 0;
	padding: 0;
	letter-spacing: normal;
	z-index: 9000 !important;
}

.nsToastContainer.nsToast-bottom-left 
{
	bottom: 20px;
	left: 20px;
}

.nsToastContainer.nsToast-bottom-right 
{
	bottom: 20px;
	right: 40px;
}

.nsToastContainer.nsToast-top-left 
{
	top: 20px;
	left: 20px;
}

.nsToastContainer.nsToast-top-right 
{
	top: 20px;
	right: 40px;
}

.nsToastContainer .nsToast 
{
	display: block;
	width: 100%;
	padding: 10px;
	margin: 0px 0px 5px;
	border-radius: 4px;
	line-height: 17px;
	position: relative;
	pointer-events: all !important;
	
}

.nsToastContainer .nsToast.nsToastHidden
{
	display: none;
}

.nsToastContainer .nsToast .nsToastHeader 
{
	font-family: arial, sans-serif;
	font-size: 14px;
	margin: 0px 0px 7px;
	background: none;
	color: inherit;
	line-height: inherit;
	letter-spacing: normal;
}

.nsToastContainer .nsToast .nsToastBody 
{
	margin: 0px 0px 0px 15px;
	background: none;
	padding: 0px;
}

.nsToastContainer .nsToast .nsToastBody .nsToastBodyElement
{
	list-style-type: none !important;
	line-height: 17px;
	background: none;
	margin: 0;
	padding: 0;
	letter-spacing: normal;
}

.nsToastContainer .nsToast .nsToastClose
{
	position: absolute;
	top: 3px;
	right: 7px;
	font-size: 14px;
	cursor: pointer;
}

.nsToastContainer .nsToastHasIcon 
{
	padding: 10px 10px 10px 50px;
	background-repeat: no-repeat;
	background-position: 10px;
}

.nsToastContainerWhite .nsToast 
{
	background-color: #444444;
	color: white;
	font-size: 12px;
	font-family: arial, sans-serif;
}

.nsToastContainerWhite .nsToastIconSuccess 
{
	background-color: #b7d8b7;
	color: #212121;
	border-color: #d6e9c6;
}

.nsToastContainerWhite .nsToastIconInfo 
{
	background-color: #7fbcec;
	color: #212121;
	border-color: #bce8f1;
}

.nsToastContainerWhite .nsToastIconWarning 
{
	background-color: #ffe399;
	color: #212121;
	border-color: #faebcc;
}

.nsToastContainerWhite .nsToastIconError 
{
	background-color: #f8b7bd;
	color: #212121;
	border-color: #ebccd1;
}

<!DOCTYPE html>
<html lang="en">
<head>
  <title>Message Bar Demo</title>
  
  <style>
	* {
	  box-sizing: border-box;
	}
	
	input[type=text], select {
	  width: 100%;
	  padding: 5px;
	  border: 1px solid #ccc;
	  border-radius: 4px;
	  resize: vertical;
	}
	
	input[type=text]{
		 padding: 12px;
	}
	
	label {
	  padding: 12px 12px 12px 0;
	  display: inline-block;
	}
	
	button {
	  background-color: #4CAF50;
	  color: white;
	  padding: 12px 20px;
	  border: none;
	  border-radius: 4px;
	  cursor: pointer;
	  float: right;
	}
	
	input[type=submit]:hover {
	  background-color: #45a049;
	}
	
	.container {
	  border-radius: 5px;
	  background-color: #f2f2f2;
	  padding: 20px;
	}
	
	.col-25 {
	  float: left;
	  width: 25%;
	  margin-top: 6px;
	}
	
	.col-75 {
	  float: left;
	  width: 75%;
	  margin-top: 6px;
	}
	
	/* Clear floats after the columns */
	.row:after {
	  content: "";
	  display: table;
	  clear: both;
	}
	
	/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */
	@media screen and (max-width: 600px) {
	  .col-25, .col-75, input[type=submit] {
	    width: 100%;
	    margin-top: 0;
	  }
	}
	</style>
  
  <link href="/JSLib/lib/css/com/org/nsMessageBar.css" rel="stylesheet">
  <script src="/JSLib/lib/com/org/util/nsUtil.js"></script>
  <script src="/JSLib/lib/com/org/util/nsMessageBar.js"></script>
</head>
<body>

<h2>Create Message Bar</h2>
<p>Create Message Bar with changing the settings.</p>

<div class="container" style="width: 700px;">
	  <div class="row">
	    <div class="col-25">
	      <label>Detail</label>
	    </div>
	    <div class="col-75">
	      <input type="text" id="txtText" value="This is a autogenerated MessageBar">
	    </div>
	  </div>
	  <div class="row">
	    <div class="col-25">
	      <label for="lname">summary</label>
	    </div>
	    <div class="col-75">
	      <input type="text" id="txtHeaderText" value="MessageBar Demo">
	    </div>
	  </div>
	  <div class="row">
	    <div class="col-25">
	      <label>Severity</label>
	    </div>
	    <div class="col-75">
	      <select id="cmbIcon">
	        <option value="success">Success</option>
	        <option value="error">Error</option>
	        <option value="info">Info</option>
	        <option value="warning">Warning</option>
	        <option value=""></option>
	      </select>
	    </div>
	  </div>
	  <div class="row">
	    <div class="col-25">
	      <label>Enable Animation</label>
	    </div>
	    <div class="col-75">
	      <select id="cmbEnableAnimation">
	        <option value="true">True</option>
	        <option value="false">False</option>
	        <option value=""></option>
	      </select>
	    </div>
	  </div>
	  <div class="row">
	    <div class="col-25">
	      <label>Animation Type</label>
	    </div>
	    <div class="col-75">
	      <select id="cmbAnimationType">
	        <option value="fade">Fade</option>
	        <option value="slide">Slide</option>
	        <option value=""></option>
	      </select>
	    </div>
	  </div>
	  <div class="row">
	    <div class="col-25">
	      <label>Enable Close</label>
	    </div>
	    <div class="col-75">
	      <select id="cmbEnableClose">
	        <option value="true">True</option>
	        <option value="false">False</option>
	        <option value=""></option>
	      </select>
	    </div>
	  </div>
	  <div class="row">
	    <div class="col-25">
	      <label>Enable Auto Hide</label>
	    </div>
	    <div class="col-75">
	      <select id="cmbEnableAutoHide">
	        <option value="true">True</option>
	        <option value="false">False</option>
	        <option value=""></option>
	      </select>
	    </div>
	  </div>
	  <div class="row">
	    <div class="col-25">
	      <label>Auto Hide Interval(in ms)</label>
	    </div>
	    <div class="col-75">
	      <input type="text" id="txtAutoHideInterval" value="5000">
	    </div>
	  </div>
	  <div class="row">
	    <div class="col-25">
	      <label>Max Bar</label>
	    </div>
	    <div class="col-75">
	      <input type="text" id="txtMaxBar" value="5">
	    </div>
	  </div>
	  <div class="row">
	    <div class="col-25">
	      <label>Enable Icon</label>
	    </div>
	    <div class="col-75">
	      <select id="cmbEnableIcon">
	        <option value="true">True</option>
	        <option value="false">False</option>
	        <option value=""></option>
	      </select>
	    </div>
	  </div>
	  <div class="row">
	    <div class="col-25">
	      <label>Theme</label>
	    </div>
	    <div class="col-75">
	      <input type="text" id="txtTheme" value="White">
	    </div>
	  </div>
	  
	  <div class="row">
	    <button onclick="createMessageBar()">Create MessageBar</button>
	  </div>
</div>
<script>
	function createMessageBar()
	{
		var setting = {parent: document.body};
		setting.detail = document.getElementById("txtText").value;
		setting.summary = document.getElementById("txtHeaderText").value;
		setting.severity = getDropdownValue("cmbIcon");
		setting.enableAnimation = getDropdownValue("cmbEnableAnimation");
		setting.animationType = getDropdownValue("cmbAnimationType");
		setting.enableClose = getDropdownValue("cmbEnableClose");
		setting.enableAutoHide = getDropdownValue("cmbEnableAutoHide");
		setting.autoHideInterval = document.getElementById("txtAutoHideInterval").value;
		setting.maxBar = document.getElementById("txtMaxBar").value;
		setting.enableIcon = getDropdownValue("cmbEnableIcon");
		setting.theme = document.getElementById("txtTheme").value;
		
		var messageBar = new NSMessageBar(setting);
		
	}
	
	function getDropdownValue(id)
	{
		var select = document.querySelector("#" + id);
		if(select)
		{
			var value = select.options[select.selectedIndex].value;
			if(value != "")
			{
				return value;
			}
		}
		return null;
	}

</script>

</body>
</html>
