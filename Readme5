	//equivalent to jquery trigger
	NSUtil.prototype.triggerEvent = function(element,eventType)
	{
		// modern browsers, IE9+
		if ("createEvent" in document) 
		{
	        var event = document.createEvent("HTMLEvents");
	        event.initEvent(eventType, false, true);
	        element.dispatchEvent(event);
	    } 
		else 
		{
	        // IE 8
	        var event = document.createEventObject();
	        event.eventType = eventType;
	        element.fireEvent("on" + event.eventType,event);
	    }
	};
	
	NSUtil.prototype.caretPosition = function(element,position)
	{
		if(!element)
		{
			return null;
		}
		var start = 0, end = 0;
		if (typeof element.selectionStart == "number" && typeof element.selectionEnd == "number") 
		{
			if(!this.isUndefinedOrNull(position))
			{
				element.focus();
				element.setSelectionRange(position,position);
			}
	        start = element.selectionStart;
	        end = element.selectionEnd;
	    }
		else if(element.createTextRange)
		{
			var range = null;
			if(!this.isUndefinedOrNull(position))
			{
				range = elem.createTextRange();
	            range.move('character',position);
	            range.select();
			}
			range = document.selection.createRange();
			if (range && range.parentElement() == element) 
			{
				var len = element.value.length;
				var normalizedValue = element.value.replace(/\r\n/g, "\n");
				var textInputRange = element.createTextRange();
	            textInputRange.moveToBookmark(range.getBookmark());
	            var endRange = element.createTextRange();
	            endRange.collapse(false);
	            if (textInputRange.compareEndPoints("StartToEnd", endRange) > -1) 
	            {
	                start = end = len;
	            } 
	            else 
	            {
	                start = -textInputRange.moveStart("character", -len);
	                start += normalizedValue.slice(0, start).split("\n").length - 1;

	                if (textInputRange.compareEndPoints("EndToEnd", endRange) > -1) 
	                {
	                    end = len;
	                } 
	                else 
	                {
	                    end = -textInputRange.moveEnd("character", -len);
	                    end += normalizedValue.slice(0, end).split("\n").length - 1;
	                }
	            }
			}
		}
		else
		{
			if(!this.isUndefinedOrNull(position))
			{
				element.focus();
			}
		}
		return {start: start,end: end};
	};
