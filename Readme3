mapJSFiles.put("nsAjax", baseJSURL + "util\\nsAjax.js");
mapJSStartText.put("nsAjax", utilRef);
,"nsAjax"

String json = getJSON("nsgrid",version,"nsGrid","nsGrid",getDependencies(true,null),"NSGrid Class",null);
		createFile("nsGrid",json);
		json = getJSON("nslist",version,"nsList","nsList",getDependencies(true,true,false,false,false,null),"NSList Class",null);
		createFile("nsList",json);
		json = getJSON("nsdividerbox",version,"nsDividerBox","nsDividerBox",getDependencies(true,true,false,false,false,null),"NSDividerBox Class",null);
		createFile("nsDividerBox",json);
		json = getJSON("nsnavigation",version,"nsNavigation","nsNavigation",getDependencies(true,true,false,false,false,null),"NSNavigation Class",null);
		createFile("nsNavigation",json);
		json = getJSON("nspagination",version,"nsPagination","nsPagination",getDependencies(true,false,false,false,false,null),"NSPagination Class",null);
		createFile("nsPagination",json);
		json = getJSON("nscompexport",version,"nsExport","nsExport",getDependencies(true,false,false,false,false,null),"NSExport Class",null);
		createFile("nsExport",json);
		json = getJSON("nsrouter",version,"nsRouter","nsRouter",getDependencies(true,false,false,false,false,null),"NSRouter Class",null);
		createFile("nsRouter",json);
		json = getJSON("nsmessagebox",version,"nsMessageBox","nsMessageBox",getDependencies(true,true,false,false,false,null),"NSMessageBox Class",null);
		createFile("nsMessageBox",json);
		json = getJSON("nsdatepicker",version,"nsDatePicker","nsDatePicker",getDependencies(true,true,true,false,true,null),"NSDatePicker Class",null);
		createFile("nsDatePicker",json);
		Map<String,String> mapDep = new HashMap<String, String>();
		mapDep.put("nsgrid", version);
		json = getJSON("nstextbox",version,"nsTextBox","nsTextBox",getDependencies(true,true,false,false,false,mapDep),"NSTextBox Class",null);
		createFile("nsTextBox",json);
		json = getJSON("nsxlsxexport",version,"nsXlsxExport","nsXlsxExport",getDependencies(true,false,false,false,false,null),"NSXlsxExport Class",null);
		createFile("nsXlsxExport",json);
		json = getJSON("nsmultiselectdropdown",version,"nsMultiSelectDropdown","nsMultiSelectDropdown",getDependencies(true,true,false,false,false,null),"NSMultiSelectDropdown Class",null);
		createFile("nsMultiSelectDropdown",json);
		json = getJSON("nstablerowmover",version,"nsTableRowMover","nsTableRowMover",getDependencies(true,false,false,false,false,null),"NSTableRowMover Class",null);
		createFile("nsTableRowMover",json);
		json = getJSON("nsnumerictextbox",version,"nsNumericTextBox","nsNumericTextBox",getDependencies(true,false,false,false,false,null),"NSNumericTextBox Class",null);
		createFile("nsNumericTextBox",json);
		json = getJSON("nstabnavigator",version,"nsTabNavigator","nsTabNavigator",getDependencies(true,true,false,false,false,null),"NSTabNavigator Class",null);
		createFile("nsTabNavigator",json);
		json = getJSON("nsajax",version,"nsAjax","nsAjax",getDependencies(true,false,false,false,false,null),"NSAjax Class",null);
		createFile("nsAjax",json);
    
    private Map<String,String> getDependencies(boolean loadDefault,Map<String,String> mapExtra)
	{
		Map<String,String> mapDependencies = new HashMap<String, String>();
		if(loadDefault)
		{
			mapDependencies = getDependencies(true,true,true,true,true,mapExtra);
		}
		return mapDependencies;
	}
	
	private Map<String,String> getDependencies(boolean includeUtil,boolean includeBase,boolean includeSVG,boolean includePluggins,boolean includeDateUtil,Map<String,String> mapExtra)
	{
		Map<String,String> mapDependencies = new HashMap<String, String>();
		if(includeUtil)
		{
			mapDependencies.put("nscomputil", version);
		}
		if(includeBase)
		{
			mapDependencies.put("nscontainerbase", version);
		}
		if(includeSVG)
		{
			mapDependencies.put("nssvg", version);
		}
		if(includePluggins)
		{
			mapDependencies.put("nspluggins", version);
		}
		if(includeDateUtil)
		{
			mapDependencies.put("nsdateutil", version);
		}
		if(mapExtra != null && mapExtra.size() > 0)
		{
			mapDependencies.putAll(mapExtra);
		}
		return mapDependencies;
	}
