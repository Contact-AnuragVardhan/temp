import React from 'react';
import { Action as HistoryAction, Location as HistoryLocation, MemoryHistory } from 'history';
import { withRouter, RouteComponentProps } from 'react-router';
import { BrowserRouter } from 'react-router-dom';

class RoutesWrapper extends React.Component<RouteComponentProps> 
{
  private history: any;

  constructor(props: RouteComponentProps) 
  {
      super(props);
      this.history = props.history;
      this.history.listen(this.handleHistoryChange.bind(this));
      this.history.block(this.handleHistoryBlock.bind(this));
  }
    
  render() 
  {
      return <>{this.props.children}</>;
  }
  
  componentWillMount() 
  {
      
  }

  componentDidUpdate(prevProps: any) 
  {
      //const { history: { action }, location: { pathname: newPath = 'root' }} = this.props;
      //const { location: { pathname = 'root' }} = prevProps;
  }
  
  private handleHistoryChange(location: HistoryLocation, action: HistoryAction) 
  {
      console.log(location);
      console.log(action);
  }
  
  private handleHistoryBlock(location: HistoryLocation, action: HistoryAction) 
  {
      /*if(location && location.pathname && location.pathname == "/flatGrid")
      {
          return false;
      }*/
  }
}

export default withRouter(RoutesWrapper);
