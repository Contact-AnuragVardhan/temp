var NSDatePicker = (function()
{
	function NSDatePicker(component,setting) 
	{
		this.__setting = setting;
		
		this.__context = window;
		this.__inputFormat = "mm/dd/yyyy";
		this.__placeHolder = null;
		this.__buttonHtml = null;
		this.__customClass = {container:null,textInput:null,button:null,calContainer:null,calHeaderContainer:null,calPrevButton:null,calNextButton:null,calMonthDropdown:null,calYearDropdown:null,calWeekContainer:null,calWeek:null,calDayContainer:null,calDay:null,calFooterContainer:null};
		
		this.__divContainer = null;
		this.__txtBox = null;
		this.__btnActivate = null;
		this.__divCalContainer = null;
		
		this.__nsCalendar = null;
		
		this.base.__setBaseComponent.call(this,component);
	};
	nsExtendPrototype(NSContainerBase,NSDatePicker);
	NSDatePicker.prototype.constructor = NSDatePicker;
	
	NSDatePicker.prototype.initializeComponent = function() 
	{
		this.base.initializeComponent.call(this);
		this.__setSetting();
		this.__initDefault();
		this.__createComponent();
	};
	
	NSDatePicker.prototype.setComponentProperties = function() 
	{
		this.base.setComponentProperties.call(this);
	};
	
	NSDatePicker.prototype.propertyChange = function(attrName, oldVal, newVal, setProperty)
	{
		var attributeName = attrName.toLowerCase();
		this.base.propertyChange.call(this,attrName, oldVal, newVal, setProperty);
	};
	
	NSDatePicker.prototype.removeComponent = function() 
	{
		this.base.removeComponent.call(this);
	};
	
	NSDatePicker.prototype.componentResized = function(event) 
	{
		this.base.componentResized.call(this,event);
	};
	
	NSDatePicker.prototype.getSelectedDate = function() 
	{
		return this.__selectedDate;
	};
	
	NSDatePicker.prototype.getSelectedDateAsString = function(format) 
	{
		if(this.__selectedDate)
		{
			var nsDateUtil = new NSDateUtil();
			return nsDateUtil.format(this.__selectedDate,format);
		}
		return null;
	};
	
	NSDatePicker.prototype.setSelectedDate = function(date,format) 
	{
		this.__selectedDate = this.__formatInputDate(date,format);
		this.__updateDays(this.__selectedDate);
	};
	
	NSDatePicker.prototype.setYear = function(year) 
	{
		this.__cmbYear.selectedIndex = this.__cmbYear.querySelector('option[value="'+ year +'"]').index;
		this.__dropDownChangeHandler();
		this.__cmbMonth.selectedIndex = monthDate.getMonth();
	};
	
	NSDatePicker.prototype.setMonth = function(month) 
	{
		this.__cmbMonth.selectedIndex = month;
		this.__dropDownChangeHandler();
	};
	
	NSDatePicker.prototype.__setSetting = function()
	{
		if(!this.__setting)
		{
			this.__setting = {};
		}
		var setting = this.__setting;
		if(setting)
		{
			if(setting.hasOwnProperty("context"))
			{
				this.__context = setting["context"];
			}
			if(setting.hasOwnProperty("inputFormat"))
			{
				this.__inputFormat = setting["inputFormat"];
			}
			if(setting.hasOwnProperty("placeHolder"))
			{
				this.__placeHolder = setting["placeHolder"];
			}
			if(setting.hasOwnProperty("buttonHtml"))
			{
				this.__buttonHtml = setting["buttonHtml"];
			}
			if(setting.hasOwnProperty("theme"))
			{
				this.__theme = setting["theme"];
			}
			var customClass = {};
			if(setting.hasOwnProperty("customClass"))
			{
				customClass = setting["customClass"];
			}
			if(!customClass)
			{
				customClass = {};
			}
			for(var prop in this.__customClass)
			{
				this.__customClass[prop] = (customClass[prop] || null);
			}
		}
	};
	
	NSDatePicker.prototype.__initDefault = function()
	{
		if(!this.__buttonHtml)
		{
			this.__buttonHtml = "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \r\n" + 
								"	 width=\"16px\" height=\"16px\" viewBox=\"0 0 36.447 36.447\" >\r\n" + 
								"<g>\r\n" + 
								"	<g>\r\n" + 
								"		<path d=\"M30.224,3.948h-1.098V2.75c0-1.517-1.197-2.75-2.67-2.75c-1.474,0-2.67,1.233-2.67,2.75v1.197h-2.74V2.75\r\n" + 
								"			c0-1.517-1.197-2.75-2.67-2.75c-1.473,0-2.67,1.233-2.67,2.75v1.197h-2.74V2.75c0-1.517-1.197-2.75-2.67-2.75\r\n" + 
								"			c-1.473,0-2.67,1.233-2.67,2.75v1.197H6.224c-2.343,0-4.25,1.907-4.25,4.25v24c0,2.343,1.907,4.25,4.25,4.25h24\r\n" + 
								"			c2.344,0,4.25-1.907,4.25-4.25v-24C34.474,5.855,32.567,3.948,30.224,3.948z M25.286,2.75c0-0.689,0.525-1.25,1.17-1.25\r\n" + 
								"			c0.646,0,1.17,0.561,1.17,1.25v4.896c0,0.689-0.524,1.25-1.17,1.25c-0.645,0-1.17-0.561-1.17-1.25V2.75z M17.206,2.75\r\n" + 
								"			c0-0.689,0.525-1.25,1.17-1.25s1.17,0.561,1.17,1.25v4.896c0,0.689-0.525,1.25-1.17,1.25s-1.17-0.561-1.17-1.25V2.75z M9.125,2.75\r\n" + 
								"			c0-0.689,0.525-1.25,1.17-1.25s1.17,0.561,1.17,1.25v4.896c0,0.689-0.525,1.25-1.17,1.25s-1.17-0.561-1.17-1.25V2.75z\r\n" + 
								"			 M31.974,32.198c0,0.965-0.785,1.75-1.75,1.75h-24c-0.965,0-1.75-0.785-1.75-1.75v-22h27.5V32.198z\"/>\r\n" + 
								"		<rect x=\"6.724\" y=\"14.626\" width=\"4.595\" height=\"4.089\"/>\r\n" + 
								"		<rect x=\"12.857\" y=\"14.626\" width=\"4.596\" height=\"4.089\"/>\r\n" + 
								"		<rect x=\"18.995\" y=\"14.626\" width=\"4.595\" height=\"4.089\"/>\r\n" + 
								"		<rect x=\"25.128\" y=\"14.626\" width=\"4.596\" height=\"4.089\"/>\r\n" + 
								"		<rect x=\"6.724\" y=\"20.084\" width=\"4.595\" height=\"4.086\"/>\r\n" + 
								"		<rect x=\"12.857\" y=\"20.084\" width=\"4.596\" height=\"4.086\"/>\r\n" + 
								"		<rect x=\"18.995\" y=\"20.084\" width=\"4.595\" height=\"4.086\"/>\r\n" + 
								"		<rect x=\"25.128\" y=\"20.084\" width=\"4.596\" height=\"4.086\"/>\r\n" + 
								"		<rect x=\"6.724\" y=\"25.54\" width=\"4.595\" height=\"4.086\"/>\r\n" + 
								"		<rect x=\"12.857\" y=\"25.54\" width=\"4.596\" height=\"4.086\"/>\r\n" + 
								"		<rect x=\"18.995\" y=\"25.54\" width=\"4.595\" height=\"4.086\"/>\r\n" + 
								"		<rect x=\"25.128\" y=\"25.54\" width=\"4.596\" height=\"4.086\"/>\r\n" + 
								"	</g>\r\n" + 
								"</g>\r\n" + 
								"</svg>";
		}
	};
	
	NSDatePicker.prototype.__createComponent = function()
	{
		this.util.addStyleClass(this.__baseComponent,"nsDatePicker");
		this.__applyTheme(this.__baseComponent,"nsDatePicker");
		this.__divContainer = this.util.createDiv(this.getID() + "container","nsDatePickerContainer");
		this.__applyCustomClass(this.__divContainer,"container");
		this.__baseComponent.appendChild(this.__divContainer);
		this.__txtBox = this.util.createElement("input",this.getID() + "input","nsDatePickerTextBox");
		this.__applyCustomClass(this.__txtBox,"textInput");
		if(this.__placeHolder)
		{
			this.__txtBox.setAttribute("placeholder",this.__placeHolder);
		}
		this.__divContainer.appendChild(this.__txtBox);
		this.__divCalContainer = this.util.createDiv(this.getID() + "calContainer","nsDatePickerCalContainer");
		this.__divContainer.appendChild(this.__divCalContainer);
		//this.__createCalendar(this.__divContainer);
		this.__btnActivate = this.util.createElement("button",this.getID() + "button","nsDatePickerButton");
		this.__applyCustomClass(this.__txtBox,"button");
		this.__btnActivate.innerHtml = this.__buttonHtml;
		this.util.addEvent(this.__btnActivate,"click",this.__btnActivateClickHandler.bind(this));
		this.__divContainer.appendChild(this.__btnActivate);
	};
	
	NSDatePicker.prototype.__createCalendar = function(parent)
	{
		if(!this.__nsCalendar)
		{
			var setting =  this.util.cloneObject(this.__setting,true);
			setting.customClass = {};
			for(var prop in this.__customClass)
			{
				if(prop.startsWith("cal"))
				{
					var tempProp = prop.substring(3);
					tempProp = tempProp.charAt(0).toLowerCase() + tempProp.slice(1);
					setting.customClass[tempProp] = this.__customClass[prop];
				}
			}
			this.__nsCalendar = new NSCalendar(parent,setting);
		}
	};
	
	NSDatePicker.prototype.__btnActivateClickHandler = function(event)
	{
	};
	
	NSDatePicker.prototype.__applyCustomClass = function(element,type)
	{
		if(element && type && this.__customClass[type])
		{
			this.util.addStyleClass(element,this.__customClass[type]);
		}
	};
	
	NSDatePicker.DATE_SELECTED = "dateSelected";
	
	return NSDatePicker;
})();
(function(root,name,prototype)
{
   if (typeof define === "function" && define.amd)
   {
   	define(name, function () {return prototype;});
   }
   else if (typeof module !== 'undefined' && module.exports)
   {
   	module.exports = prototype;
   }
   else
   {
   	root[name] = prototype;
   }
})(this,"NSDatePicker",NSDatePicker);
